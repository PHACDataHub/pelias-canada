version: '3'

# Define global variables to be used across tasks for consistency and ease of updates.
vars:
  PROJECT_ID: phx-01hnn9wb0eg # Google Cloud Project ID where the resources will be deployed.
  REGION: northamerica-northeast1 # Deployment region for Google Cloud resources.
  NAME: pelias-geocoder # Naming prefix for created resources, aiding in identification and organization.
  FLEET_HOST_PROJECT_ID: php-fleet-monitoring # ID for the project hosting the fleet, used in Anthos Service Mesh (ASM).

tasks:
  infra-up:
    desc: Create infrastructure components up to the cluster-level
    cmds:
      # Enable necessary Google Cloud APIs required for the project's infrastructure setup.
      - gcloud services enable container.googleapis.com --project={{.PROJECT_ID}}
      - gcloud services enable mesh.googleapis.com --project={{.PROJECT_ID}}
      - gcloud services enable serviceusage.googleapis.com --project={{.PROJECT_ID}}

      # Create a custom VPC network and a subnetwork for the GKE cluster, with specified MTU and BGP routing mode.
      - >
        gcloud compute networks create {{.NAME}}-net --subnet-mode=custom
        --bgp-routing-mode=regional --mtu=1460 --project={{.PROJECT_ID}}
      - >
        gcloud compute networks subnets create {{.NAME}}-subnet --network={{.NAME}}-net
        --range=10.162.0.0/20 --region={{.REGION}} --enable-flow-logs
        --project={{.PROJECT_ID}}

      # Establish a service account for GKE nodes, granting minimal necessary permissions for operation, monitoring, and management.
      - gcloud iam service-accounts create gke-default --project {{.PROJECT_ID}}
      - >
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}}
        --member "serviceAccount:gke-default@{{.PROJECT_ID}}.iam.gserviceaccount.com"
        --role roles/logging.logWriter
      - >
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}}
        --member "serviceAccount:gke-default@{{.PROJECT_ID}}.iam.gserviceaccount.com"
        --role roles/monitoring.metricWriter
      - >
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}}
        --member "serviceAccount:gke-default@{{.PROJECT_ID}}.iam.gserviceaccount.com"
        --role roles/monitoring.viewer
      - >
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}}
        --member "serviceAccount:gke-default@{{.PROJECT_ID}}.iam.gserviceaccount.com"
        --role roles/stackdriver.resourceMetadata.writer
      - >
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}}
        --member "serviceAccount:gke-default@{{.PROJECT_ID}}.iam.gserviceaccount.com"
        --role roles/autoscaling.metricsWriter
      - >
        gcloud container --project={{.PROJECT_ID}} clusters create-auto {{.NAME}}-cluster
        --region={{.REGION}} --release-channel "regular"
        --network="projects/{{.PROJECT_ID}}/global/networks/{{.NAME}}-net"
        --subnetwork="projects/{{.PROJECT_ID}}/regions/{{.REGION}}/subnetworks/{{.NAME}}-subnet"
        --service-account="gke-default@{{.PROJECT_ID}}.iam.gserviceaccount.com"

      # Provision an autopilot GKE cluster, specifying the network and subnetwork created earlier, and using the created service account.
      - gcloud iam service-accounts create {{.NAME}}-provisioner --project {{.PROJECT_ID}}
      - >
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}}
        --member="serviceAccount:{{.NAME}}-provisioner@{{.PROJECT_ID}}.iam.gserviceaccount.com"
        --role="roles/owner"
      - >
        gcloud iam service-accounts add-iam-policy-binding
        {{.NAME}}-provisioner@{{.PROJECT_ID}}.iam.gserviceaccount.com
        --member="serviceAccount:{{.PROJECT_ID}}.svc.id.goog[cnrm-system/cnrm-controller-manager-cnrm-system]"
        --role="roles/iam.workloadIdentityUser" --project {{.PROJECT_ID}}
      - >
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}}
        --member="serviceAccount:{{.NAME}}-provisioner@{{.PROJECT_ID}}.iam.gserviceaccount.com"
        --role="roles/monitoring.metricWriter"

  install-asm:
    desc: Install and configure ASM
    cmds:
      - >
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}}
        --member "serviceAccount:service-{{.FLEET_HOST_PROJECT_NUMBER}}@gcp-sa-servicemesh.iam.gserviceaccount.com"
        --role roles/anthosservicemesh.serviceAgent
      - >
        gcloud projects add-iam-policy-binding {{.FLEET_HOST_PROJECT_ID}}
        --member "serviceAccount:service-{{.FLEET_HOST_PROJECT_NUMBER}}@gcp-sa-gkehub.iam.gserviceaccount.com"
        --role roles/gkehub.serviceAgent
      - >
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}}
        --member "serviceAccount:service-{{.FLEET_HOST_PROJECT_NUMBER}}@gcp-sa-gkehub.iam.gserviceaccount.com"
        --role roles/gkehub.serviceAgent
      - >
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}}
        --member "serviceAccount:service-{{.FLEET_HOST_PROJECT_NUMBER}}@gcp-sa-gkehub.iam.gserviceaccount.com"
        --role roles/gkehub.crossProjectServiceAgent
      - >
        gcloud container clusters update {{.NAME}}-cluster --location={{.REGION}}
        --fleet-project={{.FLEET_HOST_PROJECT_ID}} --project={{.PROJECT_ID}}
      - >
        gcloud container fleet mesh update
        --management automatic
        --memberships {{.NAME}}-cluster
        --project {{.FLEET_HOST_PROJECT_ID}}
        --location {{.REGION}}
    vars:
      FLEET_HOST_PROJECT_NUMBER:
        sh: gcloud projects describe {{.FLEET_HOST_PROJECT_ID}} --format "value(projectNumber)"

  install-flux:
    desc: Install and configure Flux
    cmds:
      - >
        flux bootstrap git
        --url=ssh://git@github.com/PHACDataHub/pelias-canada
        --branch=main
        --path=./k8s/
        --components="source-controller,kustomize-controller,notification-controller"
        --components-extra="image-reflector-controller,image-automation-controller"

  provision-devsecops-reporting:
    desc: Provision resources to enable DevSecOps reporting
    cmds:
      # Enable services for storage bucket for outputs, vunerability container scanning, pub sub  
      - >
        gcloud services enable cloudresourcemanager.googleapis.com 
          eventarc.googleapis.com 
          storage.googleapis.com 
          pubsub.googleapis.com 
          containeranalysis.googleapis.com 
          containerscanning.googleapis.com
          --project={{.PROJECT_ID}}

      # Create storage bucket with 30 day retention policy for outputs and give cloudbuild service account permission to write to it
      - >
        gcloud storage buckets create gs://pelias-devsecops-outputs-for-dashboard 
          --location={{.REGION}} 
          --retention-period=30d 
      - >
        gcloud storage buckets add-iam-policy-binding gs://pelias-devsecops-outputs-for-dashboard  
          --member="serviceAccount:890802265070@cloudbuild.gserviceaccount.com" 
          --role="roles/storage.objectUser"

      # Create a cloudbuild trigger for additional DevSecOps cloudbuild pipelines 
      - >
        gcloud builds triggers create github 
          --name="phx-01hnn9wb0eg-main-cloudbuild" 
          --region={{.REGION}} 
          --repo-name="pelias-canada" 
          --repo-owner="PHACDataHub" 
          --branch-pattern=".*" 
          --build-config="cloudbuild.yaml"   
          --include-logs-with-status 
      - >
        gcloud builds triggers create github 
          --name="phx-01hnn9wb0eg-a11y-cloudbuild" 
          --region={{.REGION}} 
          --repo-name="pelias-canada" 
          --repo-owner="PHACDataHub" 
          --branch-pattern=".*" 
          --build-config="./devsecops/a11y/cloudbuild.yaml"   
          --include-logs-with-status 

      # Create a dashboard user and give read permissions on the output storage bucket - TODO