steps:
  # Step 1: Get the current Git commit SHA, shorten it to the first 7 characters, and simulate a timestamp pattern for tagging.
  - name: 'gcr.io/cloud-builders/git'
    id: 'get-commit-sha'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'echo "main-$(git rev-parse HEAD | cut -c 1-7)-$(date +%Y%m%d%H%M%S)" > /workspace/commit_sha.txt'

  # Steps 2 to 4 remain the same, but use the new tag format for building and pushing images
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-docker-image'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        COMMIT_TAG=$(cat /workspace/commit_sha.txt)
        docker build --pull --cache-from "northamerica-northeast1-docker.pkg.dev/phx-01hnn9wb0eg/pelias-geocoder/ui:$COMMIT_TAG" \
                     -t "northamerica-northeast1-docker.pkg.dev/phx-01hnn9wb0eg/pelias-geocoder/ui:$COMMIT_TAG" .
    dir: 'ui'
    waitFor: ['get-commit-sha']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'test-docker-image'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        COMMIT_TAG=$(cat /workspace/commit_sha.txt)
        if docker image inspect "northamerica-northeast1-docker.pkg.dev/phx-01hnn9wb0eg/pelias-geocoder/ui:$COMMIT_TAG" > /dev/null; then
          echo "Docker image exists."
          exit 0
        else
          echo "Docker image does not exist."
          exit 1
        fi
    dir: 'ui'
    waitFor: ['build-docker-image']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-docker-image'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        COMMIT_TAG=$(cat /workspace/commit_sha.txt)
        docker push "northamerica-northeast1-docker.pkg.dev/phx-01hnn9wb0eg/pelias-geocoder/ui:$COMMIT_TAG"
    waitFor: ['test-docker-image']
