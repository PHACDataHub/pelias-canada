steps:
  # Step 1: Get the current Git commit SHA, shorten it to the first 7 characters, and save it to a file.
  # This identifier will be used to tag the Docker image, making it easier to track which commit a build corresponds to.
  - name: 'gcr.io/cloud-builders/git'
    id: 'get-commit-sha'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        git rev-parse HEAD | cut -c 1-7 > /workspace/commit_sha.txt
        date +%Y%m%d%H%M%S > /workspace/timestamp.txt

  # Step 2: Build the Docker image using the shortened commit SHA.
  # Docker's caching options are used to speed up the build process by reusing layers from previous builds when possible.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-docker-image'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        COMMIT_SHA=$(cat /workspace/commit_sha.txt)
        TIMESTAMP=$(cat /workspace/timestamp.txt)
        docker build --pull --cache-from "northamerica-northeast1-docker.pkg.dev/phx-01hnn9wb0eg/pelias-geocoder/ui:main-$COMMIT_SHA-$TIMESTAMP" \
                     -t "northamerica-northeast1-docker.pkg.dev/phx-01hnn9wb0eg/pelias-geocoder/ui:main-$COMMIT_SHA-$TIMESTAMP" .
    dir: 'ui'
    waitFor: ['get-commit-sha-and-time']

  # Step 3: Test the newly built Docker image to ensure it exists.
  # This step attempts to inspect the image using Docker's inspect command, which will fail if the image does not exist.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'test-docker-image'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        COMMIT_SHA=$(cat /workspace/commit_sha.txt)
        if docker image inspect "northamerica-northeast1-docker.pkg.dev/phx-01hnn9wb0eg/pelias-geocoder/ui:$COMMIT_SHA" > /dev/null; then
          echo "Docker image exists."
          exit 0
        else
          echo "Docker image does not exist."
          exit 1
        fi
    dir: 'ui'
    waitFor: ['build-docker-image']

  # Step 4: Push the Docker image to a container registry.
  # This step will only run if the previous test step confirms the image exists, ensuring we do not attempt to push a non-existent image.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-docker-image'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        COMMIT_SHA=$(cat /workspace/commit_sha.txt)
        docker push "northamerica-northeast1-docker.pkg.dev/phx-01hnn9wb0eg/pelias-geocoder/ui:$COMMIT_SHA"
    waitFor: ['test-docker-image']