apiVersion: batch/v1
kind: Job
metadata:
  name: polylines-download
spec:
  template:
    metadata:
      name: polylines-importer
    spec:
      initContainers:
        - name: polylines-download
          image: ghcr.io/valhalla/valhalla:latest
          workingDir: /home
          command: ["/bin/bash", "-c"]
          args:
            [
              "valhalla_build_config --mjolnir-tile-dir valhalla_tiles --mjolnir-tile-extract valhalla_tiles.tar --mjolnir-timezone valhalla_tiles/timezones.sqlite --mjolnir-admin valhalla_tiles/admins.sqlite > valhalla.json; valhalla_build_tiles -c valhalla.json /data/openstreetmap/canada-latest.osm.pbf; valhalla_export_edges --config valhalla.json > /data/polylines/extract.0sv",
            ]
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: data-volume
              mountPath: /data
            - name: home-volume
              mountPath: /home
          env:
            - name: PELIAS_CONFIG
              value: "/etc/config/pelias.json"
          resources:
            limits:
              memory: 10Gi
              ephemeral-storage: 10Gi
              cpu: 1
            requests:
              memory: 10Gi
              ephemeral-storage: 10Gi
              cpu: 1
      containers:
        - name: polylines-import
          image: pelias/polylines:master
          command: ["./bin/start"]
          volumeMounts:
            - name: data-volume
              mountPath: /data
            - name: config-volume
              mountPath: /code/pelias.json
              subPath: pelias.json
            - name: config-volume
              mountPath: /data/blacklist/osm.txt
              subPath: osm.txt
      restartPolicy: Never
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      volumes:
        - name: config-volume
          configMap:
            name: pelias-json-configmap
            items:
              - key: pelias.json
                path: pelias.json
        - name: data-volume
          persistentVolumeClaim:
            claimName: data-volume
        - name: home-volume
          emptyDir: {}
